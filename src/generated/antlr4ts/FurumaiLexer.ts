// Generated from Furumai.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class FurumaiLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly NODE = 9;
	public static readonly EDGE = 10;
	public static readonly GROUP = 11;
	public static readonly ZONE = 12;
	public static readonly HIDE = 13;
	public static readonly DELETE = 14;
	public static readonly CONFIG = 15;
	public static readonly EDGEOP = 16;
	public static readonly ID = 17;
	public static readonly SPACES = 18;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "NODE", 
		"EDGE", "GROUP", "ZONE", "HIDE", "DELETE", "CONFIG", "EDGEOP", "ID", "SPACES",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'---'", "';'", "'='", "'['", "','", "']'", "'{'", "'}'", "'node'", 
		"'edge'", "'group'", "'zone'", "'hide'", "'delete'", "'config'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "NODE", "EDGE", "GROUP", "ZONE", "HIDE", "DELETE", 
		"CONFIG", "EDGEOP", "ID", "SPACES",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(FurumaiLexer._LITERAL_NAMES, FurumaiLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return FurumaiLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(FurumaiLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Furumai.g4"; }

	// @Override
	public get ruleNames(): string[] { return FurumaiLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return FurumaiLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return FurumaiLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return FurumaiLexer.modeNames; }

	// @Override
	public action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {
		switch (ruleIndex) {
		case 16:
			this.ID_action(_localctx, actionIndex);
			break;
		}
	}
	private ID_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 0:
			this.text = this.text.slice(1, -1)
			break;

		case 1:
			this.text = this.text.slice(1, -1)
			break;
		}
	}

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x14\x86\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03" +
		"\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03" +
		"\b\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03" +
		"\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03" +
		"\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03" +
		"\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03" +
		"\x10\x03\x11\x03\x11\x03\x11\x03\x11\x05\x11f\n\x11\x03\x12\x03\x12\x07" +
		"\x12j\n\x12\f\x12\x0E\x12m\v\x12\x03\x12\x03\x12\x03\x12\x03\x12\x07\x12" +
		"s\n\x12\f\x12\x0E\x12v\v\x12\x03\x12\x03\x12\x03\x12\x03\x12\x07\x12|" +
		"\n\x12\f\x12\x0E\x12\x7F\v\x12\x05\x12\x81\n\x12\x03\x13\x03\x13\x03\x13" +
		"\x03\x13\x02\x02\x02\x14\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06" +
		"\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19" +
		"\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14" +
		"\x03\x02\x07\x03\x02))\x03\x02$$\x07\x02//2;C\\aac|\x07\x02/02;C\\aac" +
		"|\x05\x02\v\r\x0F\x0F\"\"\x02\x8B\x02\x03\x03\x02\x02\x02\x02\x05\x03" +
		"\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02" +
		"\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02" +
		"\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02" +
		"\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02" +
		"\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02" +
		"\x02\x02%\x03\x02\x02\x02\x03\'\x03\x02\x02\x02\x05+\x03\x02\x02\x02\x07" +
		"-\x03\x02\x02\x02\t/\x03\x02\x02\x02\v1\x03\x02\x02\x02\r3\x03\x02\x02" +
		"\x02\x0F5\x03\x02\x02\x02\x117\x03\x02\x02\x02\x139\x03\x02\x02\x02\x15" +
		">\x03\x02\x02\x02\x17C\x03\x02\x02\x02\x19I\x03\x02\x02\x02\x1BN\x03\x02" +
		"\x02\x02\x1DS\x03\x02\x02\x02\x1FZ\x03\x02\x02\x02!e\x03\x02\x02\x02#" +
		"\x80\x03\x02\x02\x02%\x82\x03\x02\x02\x02\'(\x07/\x02\x02()\x07/\x02\x02" +
		")*\x07/\x02\x02*\x04\x03\x02\x02\x02+,\x07=\x02\x02,\x06\x03\x02\x02\x02" +
		"-.\x07?\x02\x02.\b\x03\x02\x02\x02/0\x07]\x02\x020\n\x03\x02\x02\x021" +
		"2\x07.\x02\x022\f\x03\x02\x02\x0234\x07_\x02\x024\x0E\x03\x02\x02\x02" +
		"56\x07}\x02\x026\x10\x03\x02\x02\x0278\x07\x7F\x02\x028\x12\x03\x02\x02" +
		"\x029:\x07p\x02\x02:;\x07q\x02\x02;<\x07f\x02\x02<=\x07g\x02\x02=\x14" +
		"\x03\x02\x02\x02>?\x07g\x02\x02?@\x07f\x02\x02@A\x07i\x02\x02AB\x07g\x02" +
		"\x02B\x16\x03\x02\x02\x02CD\x07i\x02\x02DE\x07t\x02\x02EF\x07q\x02\x02" +
		"FG\x07w\x02\x02GH\x07r\x02\x02H\x18\x03\x02\x02\x02IJ\x07|\x02\x02JK\x07" +
		"q\x02\x02KL\x07p\x02\x02LM\x07g\x02\x02M\x1A\x03\x02\x02\x02NO\x07j\x02" +
		"\x02OP\x07k\x02\x02PQ\x07f\x02\x02QR\x07g\x02\x02R\x1C\x03\x02\x02\x02" +
		"ST\x07f\x02\x02TU\x07g\x02\x02UV\x07n\x02\x02VW\x07g\x02\x02WX\x07v\x02" +
		"\x02XY\x07g\x02\x02Y\x1E\x03\x02\x02\x02Z[\x07e\x02\x02[\\\x07q\x02\x02" +
		"\\]\x07p\x02\x02]^\x07h\x02\x02^_\x07k\x02\x02_`\x07i\x02\x02` \x03\x02" +
		"\x02\x02ab\x07/\x02\x02bf\x07@\x02\x02cd\x07/\x02\x02df\x07/\x02\x02e" +
		"a\x03\x02\x02\x02ec\x03\x02\x02\x02f\"\x03\x02\x02\x02gk\x07)\x02\x02" +
		"hj\n\x02\x02\x02ih\x03\x02\x02\x02jm\x03\x02\x02\x02ki\x03\x02\x02\x02" +
		"kl\x03\x02\x02\x02ln\x03\x02\x02\x02mk\x03\x02\x02\x02no\x07)\x02\x02" +
		"o\x81\b\x12\x02\x02pt\x07$\x02\x02qs\n\x03\x02\x02rq\x03\x02\x02\x02s" +
		"v\x03\x02\x02\x02tr\x03\x02\x02\x02tu\x03\x02\x02\x02uw\x03\x02\x02\x02" +
		"vt\x03\x02\x02\x02wx\x07$\x02\x02x\x81\b\x12\x03\x02y}\t\x04\x02\x02z" +
		"|\t\x05\x02\x02{z\x03\x02\x02\x02|\x7F\x03\x02\x02\x02}{\x03\x02\x02\x02" +
		"}~\x03\x02\x02\x02~\x81\x03\x02\x02\x02\x7F}\x03\x02\x02\x02\x80g\x03" +
		"\x02\x02\x02\x80p\x03\x02\x02\x02\x80y\x03\x02\x02\x02\x81$\x03\x02\x02" +
		"\x02\x82\x83\t\x06\x02\x02\x83\x84\x03\x02\x02\x02\x84\x85\b\x13\x04\x02" +
		"\x85&\x03\x02\x02\x02\b\x02ekt}\x80\x05\x03\x12\x02\x03\x12\x03\x02\x03" +
		"\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!FurumaiLexer.__ATN) {
			FurumaiLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(FurumaiLexer._serializedATN));
		}

		return FurumaiLexer.__ATN;
	}

}

