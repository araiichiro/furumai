// Generated from Furumai.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class FurumaiLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly ID = 16;
	public static readonly HASH = 17;
	public static readonly DOT = 18;
	public static readonly STRING = 19;
	public static readonly EDGEOP = 20;
	public static readonly SPACES = 21;
	public static readonly SINGLE_LINE_COMMENT = 22;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "ID", "HASH", "DOT", 
		"STRING", "EDGEOP", "SPACES", "SINGLE_LINE_COMMENT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "';'", "'---'", "'config'", "'{'", "'}'", "'group'", "'zone'", 
		"'hide'", "'['", "','", "']'", "'style'", "'*'", "':'", "'='",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "ID", "HASH", "DOT", "STRING", "EDGEOP", "SPACES", 
		"SINGLE_LINE_COMMENT",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(FurumaiLexer._LITERAL_NAMES, FurumaiLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return FurumaiLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(FurumaiLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Furumai.g4"; }

	// @Override
	public get ruleNames(): string[] { return FurumaiLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return FurumaiLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return FurumaiLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return FurumaiLexer.modeNames; }

	// @Override
	public action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {
		switch (ruleIndex) {
		case 18:
			this.STRING_action(_localctx, actionIndex);
			break;
		}
	}
	private STRING_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 0:
			 this.text = this.text.slice(1, -1)
			break;

		case 1:
			 this.text = this.text.slice(1, -1) 
			break;
		}
	}

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x18\xA4\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03" +
		"\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03" +
		"\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03" +
		"\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10" +
		"\x03\x10\x03\x11\x06\x11d\n\x11\r\x11\x0E\x11e\x03\x11\x03\x11\x06\x11" +
		"j\n\x11\r\x11\x0E\x11k\x07\x11n\n\x11\f\x11\x0E\x11q\v\x11\x03\x12\x03" +
		"\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x07\x14{\n\x14\f" +
		"\x14\x0E\x14~\v\x14\x03\x14\x03\x14\x03\x14\x03\x14\x07\x14\x84\n\x14" +
		"\f\x14\x0E\x14\x87\v\x14\x03\x14\x03\x14\x05\x14\x8B\n\x14\x03\x15\x03" +
		"\x15\x03\x15\x03\x15\x05\x15\x91\n\x15\x03\x16\x03\x16\x03\x16\x03\x16" +
		"\x03\x17\x03\x17\x03\x17\x03\x17\x07\x17\x9B\n\x17\f\x17\x0E\x17\x9E\v" +
		"\x17\x03\x17\x05\x17\xA1\n\x17\x03\x17\x03\x17\x02\x02\x02\x18\x03\x02" +
		"\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11" +
		"\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10" +
		"\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02" +
		"\x18\x03\x02\b\x06\x022;C\\aac|\x03\x02))\x03\x02$$\x05\x02\v\r\x0F\x0F" +
		"\"\"\x04\x02\f\f\x0F\x0F\x04\x03\f\f\x0F\x0F\x02\xAB\x02\x03\x03\x02\x02" +
		"\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02" +
		"\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02" +
		"\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02" +
		"\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02" +
		"\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02" +
		"\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)" +
		"\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x03/\x03\x02" +
		"\x02\x02\x051\x03\x02\x02\x02\x075\x03\x02\x02\x02\t<\x03\x02\x02\x02" +
		"\v>\x03\x02\x02\x02\r@\x03\x02\x02\x02\x0FF\x03\x02\x02\x02\x11K\x03\x02" +
		"\x02\x02\x13P\x03\x02\x02\x02\x15R\x03\x02\x02\x02\x17T\x03\x02\x02\x02" +
		"\x19V\x03\x02\x02\x02\x1B\\\x03\x02\x02\x02\x1D^\x03\x02\x02\x02\x1F`" +
		"\x03\x02\x02\x02!c\x03\x02\x02\x02#r\x03\x02\x02\x02%u\x03\x02\x02\x02" +
		"\'\x8A\x03\x02\x02\x02)\x90\x03\x02\x02\x02+\x92\x03\x02\x02\x02-\x96" +
		"\x03\x02\x02\x02/0\x07=\x02\x020\x04\x03\x02\x02\x0212\x07/\x02\x0223" +
		"\x07/\x02\x0234\x07/\x02\x024\x06\x03\x02\x02\x0256\x07e\x02\x0267\x07" +
		"q\x02\x0278\x07p\x02\x0289\x07h\x02\x029:\x07k\x02\x02:;\x07i\x02\x02" +
		";\b\x03\x02\x02\x02<=\x07}\x02\x02=\n\x03\x02\x02\x02>?\x07\x7F\x02\x02" +
		"?\f\x03\x02\x02\x02@A\x07i\x02\x02AB\x07t\x02\x02BC\x07q\x02\x02CD\x07" +
		"w\x02\x02DE\x07r\x02\x02E\x0E\x03\x02\x02\x02FG\x07|\x02\x02GH\x07q\x02" +
		"\x02HI\x07p\x02\x02IJ\x07g\x02\x02J\x10\x03\x02\x02\x02KL\x07j\x02\x02" +
		"LM\x07k\x02\x02MN\x07f\x02\x02NO\x07g\x02\x02O\x12\x03\x02\x02\x02PQ\x07" +
		"]\x02\x02Q\x14\x03\x02\x02\x02RS\x07.\x02\x02S\x16\x03\x02\x02\x02TU\x07" +
		"_\x02\x02U\x18\x03\x02\x02\x02VW\x07u\x02\x02WX\x07v\x02\x02XY\x07{\x02" +
		"\x02YZ\x07n\x02\x02Z[\x07g\x02\x02[\x1A\x03\x02\x02\x02\\]\x07,\x02\x02" +
		"]\x1C\x03\x02\x02\x02^_\x07<\x02\x02_\x1E\x03\x02\x02\x02`a\x07?\x02\x02" +
		"a \x03\x02\x02\x02bd\t\x02\x02\x02cb\x03\x02\x02\x02de\x03\x02\x02\x02" +
		"ec\x03\x02\x02\x02ef\x03\x02\x02\x02fo\x03\x02\x02\x02gi\x07/\x02\x02" +
		"hj\t\x02\x02\x02ih\x03\x02\x02\x02jk\x03\x02\x02\x02ki\x03\x02\x02\x02" +
		"kl\x03\x02\x02\x02ln\x03\x02\x02\x02mg\x03\x02\x02\x02nq\x03\x02\x02\x02" +
		"om\x03\x02\x02\x02op\x03\x02\x02\x02p\"\x03\x02\x02\x02qo\x03\x02\x02" +
		"\x02rs\x07%\x02\x02st\x05!\x11\x02t$\x03\x02\x02\x02uv\x070\x02\x02vw" +
		"\x05!\x11\x02w&\x03\x02\x02\x02x|\x07)\x02\x02y{\n\x03\x02\x02zy\x03\x02" +
		"\x02\x02{~\x03\x02\x02\x02|z\x03\x02\x02\x02|}\x03\x02\x02\x02}\x7F\x03" +
		"\x02\x02\x02~|\x03\x02\x02\x02\x7F\x80\x07)\x02\x02\x80\x8B\b\x14\x02" +
		"\x02\x81\x85\x07$\x02\x02\x82\x84\n\x04\x02\x02\x83\x82\x03\x02\x02\x02" +
		"\x84\x87\x03\x02\x02\x02\x85\x83\x03\x02\x02\x02\x85\x86\x03\x02\x02\x02" +
		"\x86\x88\x03\x02\x02\x02\x87\x85\x03\x02\x02\x02\x88\x89\x07$\x02\x02" +
		"\x89\x8B\b\x14\x03\x02\x8Ax\x03\x02\x02\x02\x8A\x81\x03\x02\x02\x02\x8B" +
		"(\x03\x02\x02\x02\x8C\x8D\x07/\x02\x02\x8D\x91\x07/\x02\x02\x8E\x8F\x07" +
		"/\x02\x02\x8F\x91\x07@\x02\x02\x90\x8C\x03\x02\x02\x02\x90\x8E\x03\x02" +
		"\x02\x02\x91*\x03\x02\x02\x02\x92\x93\t\x05\x02\x02\x93\x94\x03\x02\x02" +
		"\x02\x94\x95\b\x16\x04\x02\x95,\x03\x02\x02\x02\x96\x97\x071\x02\x02\x97" +
		"\x98\x071\x02\x02\x98\x9C\x03\x02\x02\x02\x99\x9B\n\x06\x02\x02\x9A\x99" +
		"\x03\x02\x02\x02\x9B\x9E\x03\x02\x02\x02\x9C\x9A\x03\x02\x02\x02\x9C\x9D" +
		"\x03\x02\x02\x02\x9D\xA0\x03\x02\x02\x02\x9E\x9C\x03\x02\x02\x02\x9F\xA1" +
		"\t\x07\x02\x02\xA0\x9F\x03\x02\x02\x02\xA1\xA2\x03\x02\x02\x02\xA2\xA3" +
		"\b\x17\x04\x02\xA3.\x03\x02\x02\x02\f\x02eko|\x85\x8A\x90\x9C\xA0\x05" +
		"\x03\x14\x02\x03\x14\x03\x02\x03\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!FurumaiLexer.__ATN) {
			FurumaiLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(FurumaiLexer._serializedATN));
		}

		return FurumaiLexer.__ATN;
	}

}

