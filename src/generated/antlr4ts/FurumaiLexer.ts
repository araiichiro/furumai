// Generated from Furumai.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class FurumaiLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly ID = 18;
	public static readonly STRING = 19;
	public static readonly COLOR = 20;
	public static readonly EDGEOP = 21;
	public static readonly SPACES = 22;
	public static readonly SINGLE_LINE_COMMENT = 23;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"ID", "CHARS", "STRING", "COLOR", "HEX", "EDGEOP", "SPACES", "SINGLE_LINE_COMMENT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "';'", "'---'", "'@config'", "'{'", "'}'", "'group'", "'zone'", 
		"'hide'", "'['", "','", "']'", "':'", "'='", "'@style'", "'*'", "'.'", 
		"'#'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, "ID", "STRING", "COLOR", "EDGEOP", 
		"SPACES", "SINGLE_LINE_COMMENT",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(FurumaiLexer._LITERAL_NAMES, FurumaiLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return FurumaiLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(FurumaiLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Furumai.g4"; }

	// @Override
	public get ruleNames(): string[] { return FurumaiLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return FurumaiLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return FurumaiLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return FurumaiLexer.modeNames; }

	// @Override
	public action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {
		switch (ruleIndex) {
		case 19:
			this.STRING_action(_localctx, actionIndex);
			break;
		}
	}
	private STRING_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 0:
			 this.text = this.text.slice(1, -1)
			break;

		case 1:
			 this.text = this.text.slice(1, -1) 
			break;
		}
	}

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x19\xB8\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x03\x02\x03\x02\x03\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04" +
		"\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07" +
		"\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03" +
		"\t\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E" +
		"\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10" +
		"\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x07\x13" +
		"r\n\x13\f\x13\x0E\x13u\v\x13\x03\x14\x06\x14x\n\x14\r\x14\x0E\x14y\x03" +
		"\x15\x03\x15\x07\x15~\n\x15\f\x15\x0E\x15\x81\v\x15\x03\x15\x03\x15\x03" +
		"\x15\x03\x15\x07\x15\x87\n\x15\f\x15\x0E\x15\x8A\v\x15\x03\x15\x03\x15" +
		"\x05\x15\x8E\n\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03" +
		"\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x05\x16\x9D\n\x16" +
		"\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x05\x18\xA5\n\x18\x03" +
		"\x19\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x07\x1A\xAF" +
		"\n\x1A\f\x1A\x0E\x1A\xB2\v\x1A\x03\x1A\x05\x1A\xB5\n\x1A\x03\x1A\x03\x1A" +
		"\x02\x02\x02\x1B\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07" +
		"\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E" +
		"\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02" +
		"\x02)\x02\x15+\x02\x16-\x02\x02/\x02\x171\x02\x183\x02\x19\x03\x02\t\x06" +
		"\x022;C\\aac|\x03\x02))\x03\x02$$\x05\x022;CHch\x05\x02\v\r\x0F\x0F\"" +
		"\"\x04\x02\f\f\x0F\x0F\x04\x03\f\f\x0F\x0F\x02\xBD\x02\x03\x03\x02\x02" +
		"\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02" +
		"\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02" +
		"\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02" +
		"\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02" +
		"\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02" +
		"\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03" +
		"\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02" +
		"\x02\x035\x03\x02\x02\x02\x057\x03\x02\x02\x02\x07;\x03\x02\x02\x02\t" +
		"C\x03\x02\x02\x02\vE\x03\x02\x02\x02\rG\x03\x02\x02\x02\x0FM\x03\x02\x02" +
		"\x02\x11R\x03\x02\x02\x02\x13W\x03\x02\x02\x02\x15Y\x03\x02\x02\x02\x17" +
		"[\x03\x02\x02\x02\x19]\x03\x02\x02\x02\x1B_\x03\x02\x02\x02\x1Da\x03\x02" +
		"\x02\x02\x1Fh\x03\x02\x02\x02!j\x03\x02\x02\x02#l\x03\x02\x02\x02%n\x03" +
		"\x02\x02\x02\'w\x03\x02\x02\x02)\x8D\x03\x02\x02\x02+\x9C\x03\x02\x02" +
		"\x02-\x9E\x03\x02\x02\x02/\xA4\x03\x02\x02\x021\xA6\x03\x02\x02\x023\xAA" +
		"\x03\x02\x02\x0256\x07=\x02\x026\x04\x03\x02\x02\x0278\x07/\x02\x0289" +
		"\x07/\x02\x029:\x07/\x02\x02:\x06\x03\x02\x02\x02;<\x07B\x02\x02<=\x07" +
		"e\x02\x02=>\x07q\x02\x02>?\x07p\x02\x02?@\x07h\x02\x02@A\x07k\x02\x02" +
		"AB\x07i\x02\x02B\b\x03\x02\x02\x02CD\x07}\x02\x02D\n\x03\x02\x02\x02E" +
		"F\x07\x7F\x02\x02F\f\x03\x02\x02\x02GH\x07i\x02\x02HI\x07t\x02\x02IJ\x07" +
		"q\x02\x02JK\x07w\x02\x02KL\x07r\x02\x02L\x0E\x03\x02\x02\x02MN\x07|\x02" +
		"\x02NO\x07q\x02\x02OP\x07p\x02\x02PQ\x07g\x02\x02Q\x10\x03\x02\x02\x02" +
		"RS\x07j\x02\x02ST\x07k\x02\x02TU\x07f\x02\x02UV\x07g\x02\x02V\x12\x03" +
		"\x02\x02\x02WX\x07]\x02\x02X\x14\x03\x02\x02\x02YZ\x07.\x02\x02Z\x16\x03" +
		"\x02\x02\x02[\\\x07_\x02\x02\\\x18\x03\x02\x02\x02]^\x07<\x02\x02^\x1A" +
		"\x03\x02\x02\x02_`\x07?\x02\x02`\x1C\x03\x02\x02\x02ab\x07B\x02\x02bc" +
		"\x07u\x02\x02cd\x07v\x02\x02de\x07{\x02\x02ef\x07n\x02\x02fg\x07g\x02" +
		"\x02g\x1E\x03\x02\x02\x02hi\x07,\x02\x02i \x03\x02\x02\x02jk\x070\x02" +
		"\x02k\"\x03\x02\x02\x02lm\x07%\x02\x02m$\x03\x02\x02\x02ns\x05\'\x14\x02" +
		"op\x07/\x02\x02pr\x05\'\x14\x02qo\x03\x02\x02\x02ru\x03\x02\x02\x02sq" +
		"\x03\x02\x02\x02st\x03\x02\x02\x02t&\x03\x02\x02\x02us\x03\x02\x02\x02" +
		"vx\t\x02\x02\x02wv\x03\x02\x02\x02xy\x03\x02\x02\x02yw\x03\x02\x02\x02" +
		"yz\x03\x02\x02\x02z(\x03\x02\x02\x02{\x7F\x07)\x02\x02|~\n\x03\x02\x02" +
		"}|\x03\x02\x02\x02~\x81\x03\x02\x02\x02\x7F}\x03\x02\x02\x02\x7F\x80\x03" +
		"\x02\x02\x02\x80\x82\x03\x02\x02\x02\x81\x7F\x03\x02\x02\x02\x82\x83\x07" +
		")\x02\x02\x83\x8E\b\x15\x02\x02\x84\x88\x07$\x02\x02\x85\x87\n\x04\x02" +
		"\x02\x86\x85\x03\x02\x02\x02\x87\x8A\x03\x02\x02\x02\x88\x86\x03\x02\x02" +
		"\x02\x88\x89\x03\x02\x02\x02\x89\x8B\x03\x02\x02\x02\x8A\x88\x03\x02\x02" +
		"\x02\x8B\x8C\x07$\x02\x02\x8C\x8E\b\x15\x03\x02\x8D{\x03\x02\x02\x02\x8D" +
		"\x84\x03\x02\x02\x02\x8E*\x03\x02\x02\x02\x8F\x90\x07%\x02\x02\x90\x91" +
		"\x05-\x17\x02\x91\x92\x05-\x17\x02\x92\x93\x05-\x17\x02\x93\x9D\x03\x02" +
		"\x02\x02\x94\x95\x07%\x02\x02\x95\x96\x05-\x17\x02\x96\x97\x05-\x17\x02" +
		"\x97\x98\x05-\x17\x02\x98\x99\x05-\x17\x02\x99\x9A\x05-\x17\x02\x9A\x9B" +
		"\x05-\x17\x02\x9B\x9D\x03\x02\x02\x02\x9C\x8F\x03\x02\x02\x02\x9C\x94" +
		"\x03\x02\x02\x02\x9D,\x03\x02\x02\x02\x9E\x9F\t\x05\x02\x02\x9F.\x03\x02" +
		"\x02\x02\xA0\xA1\x07/\x02\x02\xA1\xA5\x07/\x02\x02\xA2\xA3\x07/\x02\x02" +
		"\xA3\xA5\x07@\x02\x02\xA4\xA0\x03\x02\x02\x02\xA4\xA2\x03\x02\x02\x02" +
		"\xA50\x03\x02\x02\x02\xA6\xA7\t\x06\x02\x02\xA7\xA8\x03\x02\x02\x02\xA8" +
		"\xA9\b\x19\x04\x02\xA92\x03\x02\x02\x02\xAA\xAB\x071\x02\x02\xAB\xAC\x07" +
		"1\x02\x02\xAC\xB0\x03\x02\x02\x02\xAD\xAF\n\x07\x02\x02\xAE\xAD\x03\x02" +
		"\x02\x02\xAF\xB2\x03\x02\x02\x02\xB0\xAE\x03\x02\x02\x02\xB0\xB1\x03\x02" +
		"\x02\x02\xB1\xB4\x03\x02\x02\x02\xB2\xB0\x03\x02\x02\x02\xB3\xB5\t\b\x02" +
		"\x02\xB4\xB3\x03\x02\x02\x02\xB5\xB6\x03\x02\x02\x02\xB6\xB7\b\x1A\x04" +
		"\x02\xB74\x03\x02\x02\x02\f\x02sy\x7F\x88\x8D\x9C\xA4\xB0\xB4\x05\x03" +
		"\x15\x02\x03\x15\x03\x02\x03\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!FurumaiLexer.__ATN) {
			FurumaiLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(FurumaiLexer._serializedATN));
		}

		return FurumaiLexer.__ATN;
	}

}

