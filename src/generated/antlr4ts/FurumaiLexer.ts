// Generated from Furumai.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class FurumaiLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly ID = 18;
	public static readonly STRING = 19;
	public static readonly COLOR = 20;
	public static readonly EDGEOP = 21;
	public static readonly SPACES = 22;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"ID", "CHARS", "STRING", "COLOR", "HEX", "EDGEOP", "SPACES",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'---'", "'@config'", "'{'", "';'", "'}'", "'group'", "'zone'", 
		"'hide'", "'['", "','", "']'", "':'", "'='", "'@style'", "'*'", "'.'", 
		"'#'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, "ID", "STRING", "COLOR", "EDGEOP", 
		"SPACES",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(FurumaiLexer._LITERAL_NAMES, FurumaiLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return FurumaiLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(FurumaiLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Furumai.g4"; }

	// @Override
	public get ruleNames(): string[] { return FurumaiLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return FurumaiLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return FurumaiLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return FurumaiLexer.modeNames; }

	// @Override
	public action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {
		switch (ruleIndex) {
		case 19:
			this.STRING_action(_localctx, actionIndex);
			break;
		}
	}
	private STRING_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 0:
			 this.text = this.text.slice(1, -1)
			break;

		case 1:
			 this.text = this.text.slice(1, -1) 
			break;
		}
	}

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x18\xA8\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04" +
		"\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07" +
		"\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03" +
		"\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03" +
		"\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03" +
		"\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x07\x13p\n\x13\f\x13\x0E" +
		"\x13s\v\x13\x03\x14\x06\x14v\n\x14\r\x14\x0E\x14w\x03\x15\x03\x15\x07" +
		"\x15|\n\x15\f\x15\x0E\x15\x7F\v\x15\x03\x15\x03\x15\x03\x15\x03\x15\x07" +
		"\x15\x85\n\x15\f\x15\x0E\x15\x88\v\x15\x03\x15\x03\x15\x05\x15\x8C\n\x15" +
		"\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16" +
		"\x03\x16\x03\x16\x03\x16\x03\x16\x05\x16\x9B\n\x16\x03\x17\x03\x17\x03" +
		"\x18\x03\x18\x03\x18\x03\x18\x05\x18\xA3\n\x18\x03\x19\x03\x19\x03\x19" +
		"\x03\x19\x02\x02\x02\x1A\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06" +
		"\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19" +
		"\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14" +
		"\'\x02\x02)\x02\x15+\x02\x16-\x02\x02/\x02\x171\x02\x18\x03\x02\x07\x06" +
		"\x022;C\\aac|\x03\x02))\x03\x02$$\x05\x022;CHch\x05\x02\v\r\x0F\x0F\"" +
		"\"\x02\xAC\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03" +
		"\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02" +
		"\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02" +
		"\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02" +
		"\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02" +
		"\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02" +
		"\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03" +
		"\x02\x02\x02\x033\x03\x02\x02\x02\x057\x03\x02\x02\x02\x07?\x03\x02\x02" +
		"\x02\tA\x03\x02\x02\x02\vC\x03\x02\x02\x02\rE\x03\x02\x02\x02\x0FK\x03" +
		"\x02\x02\x02\x11P\x03\x02\x02\x02\x13U\x03\x02\x02\x02\x15W\x03\x02\x02" +
		"\x02\x17Y\x03\x02\x02\x02\x19[\x03\x02\x02\x02\x1B]\x03\x02\x02\x02\x1D" +
		"_\x03\x02\x02\x02\x1Ff\x03\x02\x02\x02!h\x03\x02\x02\x02#j\x03\x02\x02" +
		"\x02%l\x03\x02\x02\x02\'u\x03\x02\x02\x02)\x8B\x03\x02\x02\x02+\x9A\x03" +
		"\x02\x02\x02-\x9C\x03\x02\x02\x02/\xA2\x03\x02\x02\x021\xA4\x03\x02\x02" +
		"\x0234\x07/\x02\x0245\x07/\x02\x0256\x07/\x02\x026\x04\x03\x02\x02\x02" +
		"78\x07B\x02\x0289\x07e\x02\x029:\x07q\x02\x02:;\x07p\x02\x02;<\x07h\x02" +
		"\x02<=\x07k\x02\x02=>\x07i\x02\x02>\x06\x03\x02\x02\x02?@\x07}\x02\x02" +
		"@\b\x03\x02\x02\x02AB\x07=\x02\x02B\n\x03\x02\x02\x02CD\x07\x7F\x02\x02" +
		"D\f\x03\x02\x02\x02EF\x07i\x02\x02FG\x07t\x02\x02GH\x07q\x02\x02HI\x07" +
		"w\x02\x02IJ\x07r\x02\x02J\x0E\x03\x02\x02\x02KL\x07|\x02\x02LM\x07q\x02" +
		"\x02MN\x07p\x02\x02NO\x07g\x02\x02O\x10\x03\x02\x02\x02PQ\x07j\x02\x02" +
		"QR\x07k\x02\x02RS\x07f\x02\x02ST\x07g\x02\x02T\x12\x03\x02\x02\x02UV\x07" +
		"]\x02\x02V\x14\x03\x02\x02\x02WX\x07.\x02\x02X\x16\x03\x02\x02\x02YZ\x07" +
		"_\x02\x02Z\x18\x03\x02\x02\x02[\\\x07<\x02\x02\\\x1A\x03\x02\x02\x02]" +
		"^\x07?\x02\x02^\x1C\x03\x02\x02\x02_`\x07B\x02\x02`a\x07u\x02\x02ab\x07" +
		"v\x02\x02bc\x07{\x02\x02cd\x07n\x02\x02de\x07g\x02\x02e\x1E\x03\x02\x02" +
		"\x02fg\x07,\x02\x02g \x03\x02\x02\x02hi\x070\x02\x02i\"\x03\x02\x02\x02" +
		"jk\x07%\x02\x02k$\x03\x02\x02\x02lq\x05\'\x14\x02mn\x07/\x02\x02np\x05" +
		"\'\x14\x02om\x03\x02\x02\x02ps\x03\x02\x02\x02qo\x03\x02\x02\x02qr\x03" +
		"\x02\x02\x02r&\x03\x02\x02\x02sq\x03\x02\x02\x02tv\t\x02\x02\x02ut\x03" +
		"\x02\x02\x02vw\x03\x02\x02\x02wu\x03\x02\x02\x02wx\x03\x02\x02\x02x(\x03" +
		"\x02\x02\x02y}\x07)\x02\x02z|\n\x03\x02\x02{z\x03\x02\x02\x02|\x7F\x03" +
		"\x02\x02\x02}{\x03\x02\x02\x02}~\x03\x02\x02\x02~\x80\x03\x02\x02\x02" +
		"\x7F}\x03\x02\x02\x02\x80\x81\x07)\x02\x02\x81\x8C\b\x15\x02\x02\x82\x86" +
		"\x07$\x02\x02\x83\x85\n\x04\x02\x02\x84\x83\x03\x02\x02\x02\x85\x88\x03" +
		"\x02\x02\x02\x86\x84\x03\x02\x02\x02\x86\x87\x03\x02\x02\x02\x87\x89\x03" +
		"\x02\x02\x02\x88\x86\x03\x02\x02\x02\x89\x8A\x07$\x02\x02\x8A\x8C\b\x15" +
		"\x03\x02\x8By\x03\x02\x02\x02\x8B\x82\x03\x02\x02\x02\x8C*\x03\x02\x02" +
		"\x02\x8D\x8E\x07%\x02\x02\x8E\x8F\x05-\x17\x02\x8F\x90\x05-\x17\x02\x90" +
		"\x91\x05-\x17\x02\x91\x9B\x03\x02\x02\x02\x92\x93\x07%\x02\x02\x93\x94" +
		"\x05-\x17\x02\x94\x95\x05-\x17\x02\x95\x96\x05-\x17\x02\x96\x97\x05-\x17" +
		"\x02\x97\x98\x05-\x17\x02\x98\x99\x05-\x17\x02\x99\x9B\x03\x02\x02\x02" +
		"\x9A\x8D\x03\x02\x02\x02\x9A\x92\x03\x02\x02\x02\x9B,\x03\x02\x02\x02" +
		"\x9C\x9D\t\x05\x02\x02\x9D.\x03\x02\x02\x02\x9E\x9F\x07/\x02\x02\x9F\xA3" +
		"\x07/\x02\x02\xA0\xA1\x07/\x02\x02\xA1\xA3\x07@\x02\x02\xA2\x9E\x03\x02" +
		"\x02\x02\xA2\xA0\x03\x02\x02\x02\xA30\x03\x02\x02\x02\xA4\xA5\t\x06\x02" +
		"\x02\xA5\xA6\x03\x02\x02\x02\xA6\xA7\b\x19\x04\x02\xA72\x03\x02\x02\x02" +
		"\n\x02qw}\x86\x8B\x9A\xA2\x05\x03\x15\x02\x03\x15\x03\x02\x03\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!FurumaiLexer.__ATN) {
			FurumaiLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(FurumaiLexer._serializedATN));
		}

		return FurumaiLexer.__ATN;
	}

}

